Generation~BeakSize,
main = filename,
pch = 20,
col = mycolor, cex=0.4,
xlim = c(0,11),
ylim = c(ymin,ymax),
data = datatoplot
)
}
plotfour = function(ymax=1000) {
#layout(1:4)
quartz(height=5)
layout(matrix(c(1,2,3,4),nr=2,nc=2))
plotdata(ymax=ymax, filename="Output1.csv")
plotdata(ymax=ymax, filename="Output2.csv")
plotdata(ymax=ymax, filename="Output3.csv")
plotdata(ymax=ymax, filename="Output4.csv")
}
plotall = function(directory, min, max, ymax=1000) {
remainder = min%%15
for(i in min:max) {
if(i%%15 == remainder) {
quartz(height=5)
layout(matrix(1:15,nr=3,nc=5))
}
filename = paste(directory, "/Output", i, ".csv", sep="")
plotdata(ymax=ymax, filename=filename, directory=staticdirectory)
}
}
plotset = function(directory, setnumber, setstart=1, setsize=48) {
plotall(setstart+(setnumber-1)*setsize, (setstart+setsize-1)+(setnumber-1)*setsize,
directory=directory)
}
plotsuper = function(sets, numbers) {
quartz(height=5, width=10)
layout(matrix(1:3, ncol=3, nrow=1))
for(i in 1:3) {
plotdata(
filename=paste(sets[i], "Output", numbers[i], ".csv", sep=""),
directory=staticdirectory)
}
}
plotsuper(AIC, c(1,1,1))
PSMI = c("idom/pseudo", "idom/meiosis", "cdom/meiosis")
plotsuper(AIC, c(1,1,1))
AIC = c("avg/", "cdom/pseudo/", "idom/pseudo/")
plotsuper(AIC, c(2,3,1))
plotsuper(AIC, c(1,1,1))
plotsuper(PSMI, c(1,1,1))
PSMI = c("idom/pseudo/", "idom/meiosis/", "cdom/meiosis/")
plotsuper(PSMI, c(1,1,1))
plotsuper(PSMI, c(1,2,1))
plotsuper(PSMI, c(1,3,1))
plotsuper(PSMI, c(49,49,49))
plotset("cdom/meiosis", 2)
plotsuper(PSMI, c(49,49,50))
plotset("cdom/pseudo", 2)
plotset("idom/meiosis", 2)
plotsuper(PSMI, c(49,61,50))
plotsuper(PSMI, c(49,49,50))
48*2
plotsuper(PSMI, c(97,97,97))
plotsuper(PSMI, c(97,98,97))
plotsuper(PSMI, c(97,98,98))
48*3
plotsuper(PSMI, c(145,145,145))
plotset("idom/meiosis", USRM)
plotsuper(PSMI, c(145,148,145))
plotsuper(PSMI, c(145,147,145))
8
plotsuper(PSMI, c(145,148,145))
plotsuper(PSMI, c(145,147,146))
directory=staticdirectory)
plotsuper(PSMI, c(146, 147, 145))
plotsuper(AIC, c(2,   3,   1))
plotsuper(AIC, c(55,  55,  49))
plotsuper(AIC, c(97,  97,  97))
plotsuper(AIC, c(145, 146, 146))
plotsuper(PSMI, c(1,   3,   1))
plotsuper(PSMI, c(49,  49,  50))
plotsuper(PSMI, c(97,  98,  98))
plotsuper(PSMI, c(146, 147, 145))
WIDE = c("wide/", "wide/", "wide/")
plotsuper(WIDE, c(1, 49, 97))
plotsuper(WIDE, c(1, 50, 97))
plotsuper(WIDE, c(1, 50, 97))
48*2
plotsuper(NARROW, c(1, 49, 97))
NARROW = c("narrow/", "narrow/", "narrow/")
plotsuper(NARROW, c(1, 49, 97))
plotsuper(NARROW, c(1, 49, 98))
plotset("narrow", 3)
plotsuper(NARROW, c(1, 49, 115))
plotsuper(NARROW, c(1, 49, 119))
plotsuper(NARROW, c(115, 119, 121))
WIDE = c("wide/", "wide/", "wide/")
plotsuper(WIDE, c(1, 50, 97))
NARROW = c("narrow/", "narrow/", "narrow/")
plotsuper(NARROW, c(1, 49, 119))
#Experiment 4
WIDE = c("wide/", "wide/", "wide/")
plotsuper(WIDE, c(1, 50, 97))
NARROW = c("narrow/", "narrow/", "narrow/")
plotsuper(NARROW, c(1, 49, 119))
plotset("idom/pseudo", BRSM)
plotset("idom/pseudo", BSRM)
plotcomp("idom/pseudo/Output51.csv", "wide/Output1.csv")
plotcomp = function(plot1, plot2, diretory=staticdirectory) {
quartz(height=5, width=10)
layout(matrix(1:2, ncol=2, nrow=1))
plotdata(filename=plot1, directory=diretory)
plotdata(filename=plot1, directory=diretory)
}
plotcomp("idom/pseudo/Output51.csv", "wide/Output1.csv")
plotcomp = function(plot1, plot2, diretory=staticdirectory) {
quartz(height=5, width=10)
layout(matrix(1:2, ncol=2, nrow=1))
plotdata(filename=plot1, directory=diretory)
plotdata(filename=plot2, directory=diretory)
}
plotcomp("idom/pseudo/Output51.csv", "wide/Output1.csv")
plotset("idom/pseudo", BSAM)
plotset("idom/pseudo", BSAM)
#Experiment 4
WIDE = c("wide/", "wide/", "wide/")
plotsuper(WIDE, c(1, 50, 97))
NARROW = c("narrow/", "narrow/", "narrow/")
plotsuper(NARROW, c(1, 49, 119))
PSMI = c("idom/pseudo/", "idom/meiosis/", "cdom/meiosis/")
plotsuper(PSMI, c(1,   3,   1))
plotsuper(PSMI, c(49,  49,  50))
plotsuper(PSMI, c(97,  98,  98))
plotsuper(PSMI, c(146, 147, 145))
#Experiment 4
WIDE = c("wide/", "wide/", "wide/")
plotsuper(WIDE,   c(1, 50, 97))
NARROW = c("narrow/", "narrow/", "narrow/")
plotsuper(NARROW, c(1, 49, 119))
clear
ls
pavg = 30/38
pavg = 30/48
ppseudo = 23/48
p1 = pavg
p2 = ppseudo
q1 = 1-p1
q2 = 1-p2
n1 = 48
n2 = 48
2 * sqrt(p1*q1/n1 + p2*q2/n2)
thresh = 2 * sqrt(p1*q1/n1 + p2*q2/n2)
p2-p1 + c(-thresh, thresh)
?z.test2sam
getwd()
library(ggplot2)
library(grid)
data1 = read.table(file.choose(), header = TRUE, sep = ",")
rmx = theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
rmy = theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
rma = rmx+rmy
# This example uses the ChickWeight dataset, which comes with ggplot2
# First plot
mytheme = ggplot(NULL, aes(x=Generation, y=BeakSize)) +
theme(legend.position="none") + theme_bw() +
scale_y_continuous(breaks = 2*(0:5), limits = c(0,11))
p1 = mytheme + geom_point(data=data1, color="DarkBlue", size=0.01); p1
grid.newpage()
grid.draw(rbind(ggplotGrob(p1+rmx), ggplotGrob(p1+rmx), ggplotGrob(p1), size = "last"))
?grid
?grid.newpage
?grid.draw
?size
?grid.draw
?arrange.grobs()
grid.newpage()
g1 = ggplotGrob(p1+rmx)
g2 = ggplotGrob(p1+rmx)
g3 = ggplotGrob(p1)
grid.draw(rbind(g1, g2, g3, size = "last"))
?arrangeGrob
library(ggplot2)
library(grid)
library(gridExtra)
library(lattice)
install.packages("gridExtra")
library(gridExtra)
?grid.arrange
grid.arrange(g1, g2, g3)
grid.draw(rbind(g1, g2, g3, size = "last"))
x = grid.arrange(g1, g2, g3)
grid.newpage()
g1 = ggplotGrob(p1+rmx)
g2 = ggplotGrob(p1+rmx)
g3 = ggplotGrob(p1)
x = grid.arrange(g1, g2, g3)
grid.draw(rbind(x, size = "last"))
y = grid.arrange(g1, g2, g3)
z = grid.arrange(x, y, ncol=2)
x = grid.arrange(p1+rmx, g2, g3)
grid.newpage()
x = grid.arrange(p1+rmx, p1+rmx, p1)
y = grid.arrange(p1+rma, p1+rma, p1+rmy)
z = grid.arrange(x, y, ncol=2)
grid.draw(rbind(z, size = "last"))
grid.newpage()
gn = ggplotGrob(p1)
gx = ggplotGrob(p1+rmx)
gy = ggplotGrob(p1+rmy)
ga = ggplotGrob(p1+rma)
x = grid.arrange(gx, gx, gn)
y = grid.arrange(ga, ga, gy)
z = grid.arrange(x, y, ncol=2)
grid.draw(rbind(z, size = "last"))
grid.newpage()
g1 = ggplotGrob(p1+rmx)
g2 = ggplotGrob(p1+rmx)
g3 = ggplotGrob(p1)
x = grid.arrange(g1, g2, g3)
y = grid.arrange(g1, g2, g3)
z = grid.arrange(x, y, ncol=2)
grid.draw(rbind(z, size = "last"))
grid.draw(rbind(g1, g2, g3, size = "last"))
grid.newpage()
grid.draw(rbind(g1, g2, g3, size = "last"))
?rbind
t1 = rbind(g1, g2, g3)
grid.newpage()
grid.draw(rbind(t1, size = "last"))
g1 = ggplotGrob(p1+rmx)
g2 = ggplotGrob(p1+rmx)
g3 = ggplotGrob(p1)
x = rbind(g1, g2, g3)
y = rbind(g1, g2, g3)
z = grid.arrange(x, y, ncol=2)
z = rbind(x, y, ncol=2)
z = rbind(x, y)
grid.draw(rbind(z, size = "last"))
?rbind
z = cbind(x, y)
grid.newpage(); grid.draw(rbind(z, size = "last"))
x = rbind(p1+rma, p1+rma, p1)
y = rbind(g1, g2, g3)
z = cbind(x, y)
grid.newpage(); grid.draw(rbind(z, size = "last"))
x = rbind(p1+rma, p1+rma, p1)
grid.newpage(); grid.draw(rbind(x, size = "last"))
gn = ggplotGrob(p1)
gx = ggplotGrob(p1+rmx)
gy = ggplotGrob(p1+rmy)
ga = ggplotGrob(p1+rma)
gn = ggplotGrob(p1)
gx = ggplotGrob(p1+rmx)
gy = ggplotGrob(p1+rmy)
ga = ggplotGrob(p1+rma)
x = rbind(gx, gx, gn)
y = rbind(ga, ga, gy)
z = cbind(x, y)
grid.newpage(); grid.draw(rbind(z, size = "last"))
z = cbind(x, y, y)
grid.newpage(); grid.draw(rbind(z, size = "last"))
x = rbind(gx, gx, gx, gn)
y = rbind(ga, ga, gx, gy)
z = cbind(x, y, y)
grid.newpage(); grid.draw(rbind(z, size = "last"))
x = rbind(gx, gx, gx, gn)
y = rbind(ga, ga, ga, gy)
z = cbind(x, y, y)
grid.newpage(); grid.draw(rbind(z, size = "last"))
z = cbind(x, y, y) + theme_dark()
grid.newpage(); grid.draw(rbind(z, size = "last"))
grid.newpage(); grid.draw(rbind(z, size = "last"))
x = rbind(gx, gx, gx, gn)
y = rbind(ga, ga, ga, gy)
z = cbind(x, y, y)
grid.newpage(); grid.draw(rbind(z, size = "last"))
gn = ggplotGrob(p1)
gr = ggplotGrob(p1+mvr)
gf = ggplotGrob(p1+mvr+rmx)
gx = ggplotGrob(p1+rmx)
gy = ggplotGrob(p1+rmy)
ga = ggplotGrob(p1+rma)
x = rbind(gx, gx, gx, gn)
y = rbind(ga, ga, ga, gy)
z = rbind(gf, gf, gf, gr)
full = cbind(x, y, y)
grid.newpage(); grid.draw(rbind(z, size = "last"))
mvr = scale_y_continuous(breaks = 2*(0:5), limits = c(0,11), position = "right")
R.version
mvr = scale_y_continuous(position = "right")
mytheme = ggplot(NULL, aes(x=Generation, y=BeakSize)) +
theme(legend.position="none") + theme_bw() +
scale_y_continuous(position = "right")
packageVersion("ggplot2")>"2.1.0"
install.packages("ggplot2")
install.packages("ggplot2")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages("ggplot2")
mvr = scale_y_continuous(position = "right")
library(ggplot2)
mvr = scale_y_continuous(position = "right")
packageVersion("ggplot2")>"2.1.0"
packageVersion("ggplot2")
mvr = scale_y_continuous(position = "right")
mvr = scale_y_continuous(position = "right")
mvr = scale_y_continuous(position = "right")
require(cowplot)
require(grid) # for unit()
theme_set(theme_cowplot(font_size=12)) # reduce default font size
p1 <- ggplot(mtcars, aes(mpg, disp)) + geom_line(colour = "blue")
# the following code only works for ggplot2 2.2.0 or later
if (packageVersion("ggplot2")>"2.1.0")
p1 + theme_gray() + scale_y_continuous(position = "right")
require(cowplot)
require(grid) # for unit()
theme_set(theme_cowplot(font_size=12)) # reduce default font size
p1 <- ggplot(mtcars, aes(mpg, disp)) + geom_line(colour = "blue")
# the following code only works for ggplot2 2.2.0 or later
if (packageVersion("ggplot2")>"2.1.0")
p1 + theme_gray() + scale_y_continuous(position = "right")
0.245^2
0.060025/12
sqrt(1/4 * 200 * 0.245)
setwd("~/Desktop/MeioticSpeciation")
setwd("~/Desktop/MeioticSpeciation")
setwd("~/Desktop/MeioticSpeciation")
setwd("~/Desktop/MeioticSpeciation")
setwd("~/Desktop/MeioticSpeciation")
dbinom(0.05)
dnorm(0.05)
dnorm(0.025)
qnorm(0.025)
dnorm(0.00)
pnorm(0)
pnorm(2.00)
1 -pnorm(2.00)
1 -pnorm(1.97)
tsbt = function(s1, s2, n1=48, n2=48) {
p1 = s1/n1
p2 = s2/n2
p = (s1*n1 + s2*n2) / (n1+n2)
z = (p1-p2) / sqrt(p * (1-p) * (1/n1 + 1/n2))
return(pnorm(z))
}
tsbt(0,0)
tsbt(1,1)
print(z)
#Two Sample Binomial Test
tsbt = function(s1, s2, n1=48, n2=48) {
p1 = s1/n1
p2 = s2/n2
p = (s1*n1 + s2*n2) / (n1+n2)
z = (p1-p2) / sqrt(p * (1-p) * (1/n1 + 1/n2))
print(z)
return(pnorm(z))
}
tsbt(1,1)
#Two Sample Binomial Test
tsbt = function(s1, s2, n1=48, n2=48) {
p1 = s1/n1
p2 = s2/n2
p = (s1*n1 + s2*n2) / (n1+n2)
print(p)
z = (p1-p2) / sqrt(p * (1-p) * (1/n1 + 1/n2))
return(pnorm(z))
}
tsbt(1,1)
#Two Sample Binomial Test
tsbt = function(s1, s2, n1=48, n2=48) {
p1 = s1/n1
p2 = s2/n2
p = (p1*n1 + p2*n2) / (n1+n2)
print(p)
z = (p1-p2) / sqrt(p * (1-p) * (1/n1 + 1/n2))
return(pnorm(z))
}
tsbt(1,1)
tsbt(1,1)
#Two Sample Binomial Test
tsbt = function(s1, s2, n1=48, n2=48) {
p1 = s1/n1
p2 = s2/n2
p = (p1*n1 + p2*n2) / (n1+n2)
print(p)
z = (p1-p2) / sqrt(p * (1-p) * (1/n1 + 1/n2))
return(pnorm(z))
}
tsbt(0,0)
tsbt(0,1)
tsbt(0,1)
tsbt(31,31)
#Two Sample Binomial Test
tsbt = function(s1, s2, n1=48, n2=48) {
p1 = s1/n1
p2 = s2/n2
p = (p1*n1 + p2*n2) / (n1+n2)
z = (p1-p2) / sqrt(p * (1-p) * (1/n1 + 1/n2))
return(pnorm(z))
}
tsbt(31,31)
tsbt(31,30)
#Two Sample Binomial Test
tsbt = function(s1, s2, n1=48, n2=48) {
p1 = s1/n1
p2 = s2/n2
p = (p1*n1 + p2*n2) / (n1+n2)
z = (p1-p2) / sqrt(p * (1-p) * (1/n1 + 1/n2))
x = min(pnorm(z), 1-pnorm(z))
return(x)
}
tsbt(31,30)
tsbt(30,25)
tsbt(30,23)
tsbt(31,30)
tsbt(30,25)
tsbt(30,23)
tsbt(17,15)
tsbt(15,23)
cinterval = function(hits, total=48, alpha=0.05) {
p = hits/total
q = 1 - p
mean = p * total
sd = sqrt(p*q*total)
ndev = qnorm(1-(alpha/2))
return(c(mean-sd*ndev, mean+sd*ndev))
}
cinterval(15)
cinterval(17)
tsbt(31,30)
tsbt(31,30)
tsbt(30,25)
tsbt(30,23)
tsbt(17,15)
tsbt(15,23)
tsbt(23,21)
tsbt(0,3)
tsbt(17,15)
tsbt(15,23)
tsbt(15,21)
tsbt(0,3)
tsbt(3,0)
tsbt(0,4)
tsbt(3,4)
tsbt(31,30); tsbt(30,25); tsbt(30,23)
tsbt(31,30); tsbt(30,25); tsbt(30,23)
tsbt(17,15); tsbt(15,23); tsbt(15,21)
tsbt(00,03); tsbt(03,00); tsbt(03,04)
tsbt(35,23); tsbt(23,24); tsbt(23,34)
tsbt(13,25); tsbt(25,24); tsbt(25,14)
tsbt(31,30); tsbt(30,25); tsbt(30,23)
tsbt(17,15); tsbt(15,23); tsbt(15,21)
tsbt(00,03); tsbt(03,00); tsbt(03,04)
#TAB 1 -- BSRM
tsbt(00,00); tsbt(00,00); tsbt(00,00)
tsbt(41,38); tsbt(38,35); tsbt(38,35)
tsbt(07,10); tsbt(10,13); tsbt(10,13)
#TAB 1 -- USAM
tabt(35,37); tabt(37,41); tsbt(37,41)
tsbt(35,37); tsbt(37,41); tsbt(37,41)
tsbt(13,11); tsbt(11,07); tsbt(11,07)
#TAB 1 -- USRM
tsbt(35,23); tsbt(23,24); tsbt(23,34)
tsbt(13,25); tsbt(25,24); tsbt(25,14)
tsbt(31,30); tsbt(30,25); tsbt(30,23)
tsbt(17,15); tsbt(15,23); tsbt(15,21)
tsbt(00,03); tsbt(03,00); tsbt(03,04)
tsbt(41,38); tsbt(38,35); tsbt(38,35)
tsbt(07,10); tsbt(10,13); tsbt(10,13)
tsbt(35,37); tsbt(37,41); tsbt(37,41)
tsbt(13,11); tsbt(11,07); tsbt(11,07)
tsbt(35,37); tsbt(37,41); tsbt(37,41)
tsbt(13,11); tsbt(11,07); tsbt(11,07)
#TAB 1 -- USRM
tsbt(35,23); tsbt(23,24); tsbt(23,34)
tsbt(13,25); tsbt(25,24); tsbt(25,14)
tsbt(31,30); tsbt(30,25); tsbt(30,23)
tsbt(17,15); tsbt(15,23); tsbt(15,21)
tsbt(00,03); tsbt(03,00); tsbt(03,04)
tsbt(31,30); tsbt(30,25); tsbt(30,23)
tsbt(17,15); tsbt(15,23); tsbt(15,21)
tsbt(00,03); tsbt(03,00); tsbt(03,04)
tsbt(41,38); tsbt(38,35); tsbt(38,35)
tsbt(07,10); tsbt(10,13); tsbt(10,13)
#TAB 1 -- USAM
tsbt(35,37); tsbt(37,41); tsbt(37,41)
tsbt(13,11); tsbt(11,07); tsbt(11,07)
#TAB 1 -- USRM
tsbt(35,23); tsbt(23,24); tsbt(23,34)
tsbt(13,25); tsbt(25,24); tsbt(25,14)
tsbt(25,31); tsbt(23,20)
tsbt(23,15); tsbt(21,27)
tsbt(00,04); tsbt(02,01)
tsbt(25,31); tsbt(23,20)
tsbt(25,31); tsbt(23,20)
tsbt(23,15); tsbt(21,27)
tsbt(00,04); tsbt(02,01)
tsbt(00,02); tsbt(04,01)
tsbt(25,31); tsbt(23,20)
tsbt(23,15); tsbt(21,27)
tsbt(00,02); tsbt(04,01)
tsbt(00,01); tsbt(00,33)
tsbt(00,01); tsbt(00,33)
tsbt(35,30); tsbt(35,14)
tsbt(13,17); tsbt(13,01)
#TAB 2 -- USAM
tsbt(41,37); tsbt(41,41)
tsbt(07,11); tsbt(07,07)
tsbt(24,44); tsbt(34,40)
tsbt(24,04); tsbt(14,08)
